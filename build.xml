<!--
 * ***** BEGIN LICENSE BLOCK *****
 * Zm SSO is the Zimbra Collaboration Open Source Edition extension for single sign-on authentication to the Zimbra Web Client.
 * Copyright (C) 2020-present iWay Vietnam and/or its affiliates. All rights reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 * ***** END LICENSE BLOCK *****
 *
 * Zimbra Single Sign On
 *
 * Written by Nguyen Van Nguyen <nguyennv1981@gmail.com>
-->
<project name="zm-sso" default="jar" basedir=".">
    <description>
        Build file for the Zm SSO.
    </description>

    <property name="version"      value="1.0.0"/>
    <property name="release"      value="1"/>
    <property name="lib"          value="lib/"/>
    <property name="build"        value="build/"/>
    <property name="dist"         value="dist/"/>
    <property name="src"          value="src/"/>
    <property name="resources"    value="src/main/resources"/>
    <property name="jar"          value="zm-sso-${version}-${release}.jar"/>
    <property name="javac.source" value="1.8"/>
    <property name="javac.target" value="1.8"/>

    <path id="libraries">
        <fileset dir="${lib}" >
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>


    <target name="check-servlet-api">
        <condition property="available-servlet-api">
            <available file="${lib}/javax.servlet-api-3.1.0.jar" />
        </condition>
    </target>
    <target name="download-servlet-api" depends="check-servlet-api" unless="available-servlet-api">
        <get src="https://repo1.maven.org/maven2/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar"
             dest="${lib}/javax.servlet-api-3.1.0.jar" usetimestamp="true"/>
    </target>

    <target name="check-pac4j-core">
        <condition property="available-pac4j-core">
            <available file="${lib}/pac4j-core-5.0.0.jar" />
        </condition>
    </target>
    <target name="download-pac4j-core" depends="check-pac4j-core" unless="available-pac4j-core">
        <get src="https://repo1.maven.org/maven2/org/pac4j/pac4j-core/5.0.0/pac4j-core-5.0.0.jar"
             dest="${lib}/pac4j-core-5.0.0.jar" usetimestamp="true"/>
    </target>

    <target name="check-pac4j-cas">
        <condition property="available-pac4j-cas">
            <available file="${lib}/pac4j-cas-5.0.0.jar" />
        </condition>
    </target>
    <target name="download-pac4j-cas" depends="check-pac4j-cas" unless="available-pac4j-cas">
        <get src="https://repo1.maven.org/maven2/org/pac4j/pac4j-cas/5.0.0/pac4j-cas-5.0.0.jar"
             dest="${lib}/pac4j-cas-5.0.0.jar" usetimestamp="true"/>
    </target>

    <target name="check-pac4j-oidc">
        <condition property="available-pac4j-oidc">
            <available file="${lib}/pac4j-oidc-5.0.0.jar" />
        </condition>
    </target>
    <target name="download-pac4j-oidc" depends="check-pac4j-oidc" unless="available-pac4j-oidc">
        <get src="https://repo1.maven.org/maven2/org/pac4j/pac4j-oidc/5.0.0/pac4j-oidc-5.0.0.jar"
             dest="${lib}/pac4j-oidc-5.0.0.jar" usetimestamp="true"/>
    </target>

    <target name="check-pac4j-saml">
        <condition property="available-pac4j-saml">
            <available file="${lib}/pac4j-saml-5.0.0.jar" />
        </condition>
    </target>
    <target name="download-pac4j-saml" depends="check-pac4j-saml" unless="available-pac4j-saml">
            <get src="https://repo1.maven.org/maven2/org/pac4j/pac4j-saml/5.0.0/pac4j-saml-5.0.0.jar"
             dest="${lib}/pac4j-saml-5.0.0.jar" usetimestamp="true"/>
    </target>

    <target name="check-pac4j-config">
        <condition property="available-pac4j-config">
            <available file="${lib}/pac4j-config-5.0.0.jar" />
        </condition>
    </target>
    <target name="download-pac4j-config" depends="check-pac4j-config" unless="available-pac4j-config">
        <get src="https://repo1.maven.org/maven2/org/pac4j/pac4j-config/5.0.0/pac4j-config-5.0.0.jar"
             dest="${lib}/pac4j-config-5.0.0.jar" usetimestamp="true"/>
    </target>

    <target name="check-commons-io">
        <condition property="available-commons-io">
            <available file="${lib}/commons-io-2.8.0.jar" />
        </condition>
    </target>
    <target name="download-commons-io" depends="check-commons-io" unless="available-commons-io">
        <get src="https://repo1.maven.org/maven2/commons-io/commons-io/2.8.0/commons-io-2.8.0.jar"
             dest="${lib}/commons-io-2.8.0.jar" usetimestamp="true"/>
    </target>

    <target name="check-opensaml-core">
        <condition property="available-opensaml-core">
            <available file="${lib}/opensaml-core-4.0.1.jar" />
        </condition>
    </target>
    <target name="download-opensaml-core" depends="check-opensaml-core" unless="available-opensaml-core">
        <get src="https://repo1.maven.org/maven2/org/opensaml/opensaml-core/4.0.1/opensaml-core-4.0.1.jar"
             dest="${lib}/opensaml-core-4.0.1.jar" usetimestamp="true"/>
    </target>

    <target name="check-opensaml-xmlsec-api">
        <condition property="available-opensaml-xmlsec-api">
            <available file="${lib}/opensaml-xmlsec-api-4.0.1.jar" />
        </condition>
    </target>
    <target name="download-opensaml-xmlsec-api" depends="check-opensaml-xmlsec-api" unless="available-opensaml-xmlsec-api">
        <get src="https://repo1.maven.org/maven2/org/opensaml/opensaml-xmlsec-api/4.0.1/opensaml-xmlsec-api-4.0.1.jar"
             dest="${lib}/opensaml-xmlsec-api-4.0.1.jar" usetimestamp="true"/>
    </target>

    <target name="check-shibboleth-java-support">
        <condition property="available-shibboleth-java-support">
            <available file="${lib}/java-support-7.5.2.jar" />
        </condition>
    </target>
    <target name="download-shibboleth-java-support" depends="check-shibboleth-java-support" unless="available-shibboleth-java-support">
        <get src="https://repo1.maven.org/maven2/net/shibboleth/utilities/java-support/7.5.2/java-support-7.5.2.jar"
             dest="${lib}/java-support-7.5.2.jar" usetimestamp="true"/>
    </target>

    <target name="check-apache-httpclient">
        <condition property="available-apache-httpclient">
            <available file="${lib}/httpclient-4.5.9.jar" />
        </condition>
    </target>
    <target name="download-apache-httpclient" depends="check-apache-httpclient" unless="available-apache-httpclient">
        <get src="https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.5.9/httpclient-4.5.9.jar"
             dest="${lib}/httpclient-4.5.9.jar" usetimestamp="true"/>
    </target>

    <target name="download-dependencies"
            depends="download-servlet-api,
                download-apache-httpclient,
                download-commons-io,
                download-shibboleth-java-support,
                download-opensaml-core,
                download-opensaml-xmlsec-api,
                download-pac4j-core,
                download-pac4j-cas,
                download-pac4j-oidc,
                download-pac4j-saml,
                download-pac4j-config"
            description="download dependencies">
    </target>

    <target name="generate-buildinfo">
        <mkdir dir="${build}/buildinfo/com/iwayvietnam/buildinfo"/>
        <echo file="${build}/buildinfo/com/iwayvietnam/buildinfo/Version.java">
            package com.iwayvietnam.buildinfo;
            class Version {
                public static void main(String[] args) {
                    Package p = Version.class.getPackage();
                    System.out.println("Implementation-Title: " + p.getImplementationTitle() +
                    "\nImplementation-Version: " + p.getImplementationVersion() +
                    "\nImplementation-Vendor: " + p.getImplementationVendor() + "\n");
                }
            }
        </echo>
        <javac srcdir="${build}/buildinfo"
               destdir="${build}"
               includeantruntime="false"
               debug="true"
               target="${javac.target}" />
    </target>

    <target name="compile" depends="clean,download-dependencies,generate-buildinfo">
        <mkdir dir="${build}"/>
        <javac srcdir="${src}"
               destdir="${build}"
               includeantruntime="false"
               debug="true"
               debuglevel="lines,vars,source"
               target="${javac.target}"
               source="${javac.source}">
            <classpath>
                <path refid="libraries" />
            </classpath>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <delete dir="${build}/buildinfo"/>
        <mkdir dir="${dist}"/>
        <jar jarfile="${dist}/${jar}"
             compress="true"
             basedir="${build}"
             duplicate="preserve">
            <manifest>
                <attribute name="Main-Class" value="com.iwayvietnam.buildinfo.Version" />
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Implementation-Vendor" value="iWay Vietnam"/>
                <attribute name="Implementation-Title" value="Single Sign On for Zimbra (Zm SSO)"/>
                <attribute name="Zimbra-Extension-Name" value="com_iwayvietnam_zmsso" />
                <attribute name="Zimbra-Extension-Class" value="com.iwayvietnam.zmsso.ZmSsoExtension" />
                <attribute name="Created-By" value="iWay Vietnam" />
            </manifest>
            <fileset dir="${build}" />
            <fileset dir="${resources}" />
        </jar>
    </target>
</project>
